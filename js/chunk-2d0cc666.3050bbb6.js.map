{"version":3,"sources":["webpack:///./src/views/WallVisit.vue","webpack:///./src/views/WallVisit.vue?d9d3"],"names":["class","src","alt","$router","back","wallName","addTileClass","onShowMyTile","errorMessage","length","ref","width","frameWidth","height","frameHeight","scrolling","frameborder","showMyTileList","$store","state","listPicture","data","key","rid","onSelectTile","makePicUrl","pic_url","pic_name","iframeWin","wallRid","wallUserName","loading","loadingSuccess","enableAddTile","mounted","$refs","visitWallFrame","contentWindow","console","log","parseInt","$route","params","window","addEventListener","procMessage","computed","this","methods","event","undefined","cmd","indexOf","recv","wait","reqData","api","loginToken","localStorage","getItem","userUid","getters","needPic","isVisit","callAsync","res","code","message","wall","wall_name","postMessage","user_uid","wall_data","visit_list","mode","w","h","enable","tile","success","error","show","id","url","render"],"mappings":"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","file":"js/chunk-2d0cc666.3050bbb6.js","sourcesContent":["<template>\n  <div class=\"tw-rounded bg-white mb-2\">\n    <div class=\"flex justify-center\">\n      <div class=\"w-full py-2 md:px-5\">\n        <div class=\"flex justify-between items-center px-3 md:p-0\">\n          <button class=\"w-8 h-8 mr-2\" @click=\"$router.back()\">\n            <img src=\"/images/hero-back.svg\" alt=\"back\" />\n          </button>\n          <div class=\"mx-2 text-2xl\">{{ wallName }}</div>\n          <div class=\"flex space-x-2\">\n            <button :class=\"addTileClass\" @click=\"onShowMyTile(true)\">\n              내 타일\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"errorMessage.length > 0\" class=\"text-red-600 pb-2\">\n      {{ errorMessage }}\n    </div>\n\n    <div class=\"pb-0 md:pb-5 px-0 md:px-5\">\n      <div class=\"flex justify-center item-start\">\n        <iframe\n          class=\"tw-rounded overflow-hidden\"\n          ref=\"visitWallFrame\"\n          src=\"/kbEditWall/main.html\"\n          :width=\"frameWidth\"\n          :height=\"frameHeight\"\n          scrolling=\"no\"\n          frameborder=\"0\"\n        >\n        </iframe>\n      </div>\n    </div>\n\n    <!-- MY TILE LIST MODAL -->\n    <div\n      class=\"\n        absolute\n        inset-0\n        bg-black bg-opacity-50\n        flex\n        justify-center\n        items-start\n        h-full\n        p-5\n      \"\n      v-if=\"showMyTileList\"\n    >\n      <div class=\"relative w-full rounded-lg bg-white p-2\">\n        <div class=\"flex justify-between items-center\">\n          <div>내 타일을 붙일 수 있습니다.</div>\n          <button class=\"p-1 w-8 h-8\" @click=\"showMyTileList = false\">\n            <img src=\"/images/hero-x-outline.svg\" />\n          </button>\n        </div>\n\n        <div class=\"p-2 h-96 rounded-lg overflow-y-auto bg-gray-300\">\n          <div class=\"grid grid-cols-3 gap-2\">\n            <button\n              class=\"shadow rounded-lg overflow-hidden bg-white\"\n              v-for=\"data in $store.state.listPicture\"\n              :key=\"data.rid\"\n              @click=\"onSelectTile(data)\"\n            >\n              <img class=\"w-full\" :src=\"$store.makePicUrl(data.pic_url)\" />\n              <div>{{ data.pic_name }}</div>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      iframeWin: null,\n\n      wallRid: 0,\n      wallName: \"\",\n      wallUserName: \"\",\n\n      loading: false,\n      loadingSuccess: false,\n      errorMessage: \"\",\n      frameWidth: \"100%\",\n      frameHeight: \"100%\",\n\n      showMyTileList: false,\n      enableAddTile: false,\n    };\n  },\n  async mounted() {\n    this.iframeWin = this.$refs.visitWallFrame.contentWindow;\n    console.log(\"mounted this.iframeWin\", this.iframeWin);\n    this.wallRid = parseInt(this.$route.params.rid, 10);\n    console.log(\"WallVisit\", this.wallRid);\n\n    window.addEventListener(\"message\", this.procMessage);\n  },\n  computed: {\n    addTileClass() {\n      return this.enableAddTile ? \"tw-indigo-btn\" : \"tw-gray-btn\";\n    },\n  },\n  methods: {\n    async procMessage(event) {\n      if (event.data.cmd === undefined) return;\n      if (event.data.cmd.indexOf(\"kbEditWall\") < 0) return;\n\n      const recv = event.data;\n      console.log(\"WallVisit procMessage\", recv);\n\n      if (recv.cmd == \"kbEditWall.loadingComplete\") {\n        await this.$store.wait(1000);\n\n        const reqData = {\n          api: \"getWall\",\n          loginToken: localStorage.getItem(\"loginToken\"),\n          userUid: this.$store.getters.userUid,\n          wallRid: this.wallRid,\n          needPic: this.$store.state.listPicture === null,\n          isVisit: true,\n        };\n\n        const res = await this.$store.callAsync(reqData);\n        if (res.code != 100) {\n          this.errorMessage = res.message;\n          return;\n        }\n\n        console.log(\"getWall res\", res);\n        this.wallName = res.wall.wall_name;\n        // if (res.listPicture !== undefined) {\n        //   this.$store.commit(\"setListPicture\", res.listPicture);\n        // }\n\n        this.$store.postMessage(this.iframeWin, {\n          cmd: \"kbEditWall.firstData\",\n          user_uid: this.$store.getters.userUid,\n          wall_data: res.wall.wall_data,\n          visit_list: res.visit_list,\n          mode: \"visit\",\n        });\n      } else if (recv.cmd == \"kbEditWall.frameSize\") {\n        console.log(\"frameSize\", recv.w, recv.h);\n        this.frameWidth = recv.w;\n        this.frameHeight = recv.h;\n      } else if (recv.cmd == \"kbEditWall.setEnableAddTile\") {\n        this.enableAddTile = recv.enable;\n      } else if (recv.cmd == \"kbEditWall.saveAtVisit\") {\n        const tile = recv.tile;\n\n        const reqData = {\n          api: \"saveWallVisit\",\n          loginToken: localStorage.getItem(\"loginToken\"),\n          userUid: this.$store.getters.userUid,\n          wallRid: this.wallRid,\n          tile: tile,\n        };\n\n        const res = await this.$store.callAsync(reqData);\n        await this.$store.wait(1000);\n\n        if (res.code != 100) {\n          console.log(\"saveWallVisit err\", res);\n          this.errorMessage = res.message;\n          this.$store.postMessage(this.iframeWin, {\n            cmd: \"kbEditWall.saveComplete\",\n            success: false,\n          });\n          return;\n        }\n\n        console.log(\"saveWallVisit res\", res);\n        this.$store.postMessage(this.iframeWin, {\n          cmd: \"kbEditWall.saveComplete\",\n          success: true,\n        });\n      } else {\n        console.error(\"WallVisit unknown cmd\", recv.cmd);\n      }\n    },\n    onShowMyTile(show) {\n      if (show) {\n        if (!this.enableAddTile) {\n          return;\n        }\n      }\n      this.showMyTileList = show;\n    },\n    onSelectTile(tile) {\n      console.log(\"onSelectTile\", tile);\n      // console.log(\"onSelectTile this.iframeWin\", tile);\n      this.showMyTileList = false;\n\n      this.$store.postMessage(this.iframeWin, {\n        cmd: \"kbEditWall.addImageAtVisit\",\n        tile: {\n          id: `${tile.rid}`, // 문자열로 가야함\n          url: tile.pic_url,\n        },\n      });\n    },\n  },\n};\n</script>\n","import { render } from \"./WallVisit.vue?vue&type=template&id=37aa8d73\"\nimport script from \"./WallVisit.vue?vue&type=script&lang=js\"\nexport * from \"./WallVisit.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}