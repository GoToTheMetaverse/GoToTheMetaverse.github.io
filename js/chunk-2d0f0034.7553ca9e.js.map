{"version":3,"sources":["webpack:///./src/views/InvestHome.vue","webpack:///./src/views/InvestHome.vue?feb4"],"names":["class","loadingData","errorMessage","length","$store","getAgo","toolUpdateDate","stockDatas","data","key","code","stock_name","getPrice","getTotal","last_create","mounted","reqData","api","loginToken","localStorage","getItem","userUid","getters","inputName","inputPictureName","console","log","callAsync","res","message","resData","investHome","getMoment","dt_tool_update","i","datas","row","push","stock_type","price","total","dt_create","methods","Math","floor","render"],"mappings":"4IACOA,MAAM,iC,EACT,eAAuD,OAAlDA,MAAM,sBAAqB,qBAAiB,G,EACjD,eAMM,OANDA,MAAM,uBAAqB,CAC9B,eAIM,OAJDA,MAAM,gDAA8C,C,eAAC,qBACxC,eAAM,M,eAAA,6D,sBAOeA,MAAM,0B,aAIxCA,MAAM,8C,GACJA,MAAM,Q,EACT,eAAsB,WAAjB,eAAW,G,GACXA,MAAM,U,GAURA,MAAM,I,GACNA,MAAM,0B,GAGNA,MAAM,0B,GAGNA,MAAM,U,gDAnCjB,eAwCM,MAxCN,EAwCM,CAvCJ,EACA,EAQW,EAAAC,a,iBAAX,eAAqC,QAAb,YACR,EAAAC,aAAaC,OAAM,G,iBAAnC,eAEM,MAFN,EAEM,eADD,EAAAD,cAAY,K,iBAEjB,eAyBM,SAxBJ,eAOM,MAPN,EAOM,CANJ,eAKM,MALN,EAKM,CAJJ,EACA,eAEM,MAFN,EAEM,CADJ,eAAkD,4BAAxC,EAAAE,OAAOC,OAAO,EAAAC,iBAAc,U,mBAI5C,eAeM,2BAbW,EAAAC,YAAU,SAAlBC,G,wBAFT,eAeM,OAdJR,MAAM,uCAELS,IAAKD,EAAKE,M,CAEX,eAAyC,MAAzC,EAAyC,eAAxBF,EAAKG,YAAU,GAChC,eAEM,MAFN,EAEM,eADD,EAAAC,SAASJ,IAAI,GAElB,eAEM,MAFN,EAEM,eADD,EAAAK,SAASL,IAAI,GAElB,eAEM,MAFN,EAEM,CADJ,eAAoD,4BAA1C,EAAAJ,OAAOC,OAAOG,EAAKM,cAAW,U,2BAQnC,G,UAAA,CACbN,KADa,WAEX,MAAO,CACLP,aAAa,EACbC,aAAc,GACdI,eAAgB,GAChBC,WAAY,KAGVQ,QATO,WASG,6KACRC,EAAU,CACdC,IAAK,gBACLC,WAAYC,aAAaC,QAAQ,cACjCC,QAAS,EAAKjB,OAAOkB,QAAQD,QAC7BE,UAAW,EAAKC,kBAGlBC,QAAQC,IAAI,oBAAqBV,GACjC,EAAKf,aAAc,EATL,SAUI,EAAKG,OAAOuB,UAAUX,GAV1B,UAURY,EAVQ,OAWd,EAAK3B,aAAc,EAEnBwB,QAAQC,IAAI,oBAAqBE,GACjB,KAAZA,EAAIlB,KAdM,wBAeZ,EAAKR,aAAe0B,EAAIC,QAfZ,2BAsBd,IAHMC,EAAUF,EAAIG,WACpB,EAAKzB,eAAiB,EAAKF,OAAO4B,UAAUF,EAAQG,gBACpD,EAAK1B,WAAa,GACT2B,EAAI,EAAGA,EAAIJ,EAAQK,MAAMhC,OAAQ+B,IAClCE,EAAMN,EAAQK,MAAMD,GAC1B,EAAK3B,WAAW8B,KAAK,CACnB1B,WAAYyB,EAAIzB,WAChB2B,WAAYF,EAAIE,WAChBC,MAAOH,EAAIG,MACXC,MAAOJ,EAAII,MACX1B,YAAa,EAAKV,OAAO4B,UAAUI,EAAIK,aA7B7B,+CAiChBC,QAAS,CACP9B,SADO,SACEJ,GACP,MAAuB,OAAnBA,EAAK8B,WACAK,KAAKC,MAAMpC,EAAK+B,OACK,OAAnB/B,EAAK8B,YAA0C,WAAnB9B,EAAK8B,WACnC9B,EAAK+B,MAEL/B,EAAK8B,YAGhBzB,SAVO,SAUEL,GACP,MAAuB,OAAnBA,EAAK8B,YAEqB,OAAnB9B,EAAK8B,YAA0C,WAAnB9B,EAAK8B,WADnCK,KAAKC,MAAMpC,EAAKgC,OAIhBhC,EAAK8B,eCpGpB,EAAOO,OAASA,EAED","file":"js/chunk-2d0f0034.7553ca9e.js","sourcesContent":["<template>\n  <div class=\"rounded-lg bg-white py-4 px-2\">\n    <div class=\"py-4 px-2 text-2xl\">메타버스 관련 주를 모아봅니다.</div>\n    <div class=\"flex justify-center\">\n      <div class=\"w-64 text-center text-red-600 font-bold mb-4\">\n        경고: 종목 추천이 아닙니다.<br />\n        메타버스 관련주 투자는 2000년 IT버블 때와 비슷한 흐름이 있습니다. 투자에\n        주의해주세요\n      </div>\n    </div>\n\n    <div v-if=\"loadingData\">LOADING</div>\n    <div v-else-if=\"errorMessage.length > 0\" class=\"text-red-600 font-bold\">\n      {{ errorMessage }}\n    </div>\n    <div v-else>\n      <div class=\"flex justify-center items-center py-4 px-2\">\n        <div class=\"flex\">\n          <div>tool update</div>\n          <div class=\"tw-ago\">\n            <small>{{ $store.getAgo(toolUpdateDate) }}</small>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"flex justify-center items-center p-1\"\n        v-for=\"data in stockDatas\"\n        :key=\"data.code\"\n      >\n        <div class=\"\">{{ data.stock_name }}</div>\n        <div class=\"ml-2 text-xl font-bold\">\n          {{ getPrice(data) }}\n        </div>\n        <div class=\"ml-2 text-xl font-bold\">\n          {{ getTotal(data) }}\n        </div>\n        <div class=\"tw-ago\">\n          <small>{{ $store.getAgo(data.last_create) }}</small>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      loadingData: true,\n      errorMessage: \"\",\n      toolUpdateDate: \"\",\n      stockDatas: [],\n    };\n  },\n  async mounted() {\n    const reqData = {\n      api: \"getInvestHome\",\n      loginToken: localStorage.getItem(\"loginToken\"),\n      userUid: this.$store.getters.userUid,\n      inputName: this.inputPictureName,\n    };\n\n    console.log(\"getInvestHome req\", reqData);\n    this.loadingData = true;\n    const res = await this.$store.callAsync(reqData);\n    this.loadingData = false;\n\n    console.log(\"getInvestHome res\", res);\n    if (res.code != 100) {\n      this.errorMessage = res.message;\n      return;\n    }\n\n    const resData = res.investHome;\n    this.toolUpdateDate = this.$store.getMoment(resData.dt_tool_update);\n    this.stockDatas = [];\n    for (let i = 0; i < resData.datas.length; i++) {\n      const row = resData.datas[i];\n      this.stockDatas.push({\n        stock_name: row.stock_name,\n        stock_type: row.stock_type,\n        price: row.price,\n        total: row.total,\n        last_create: this.$store.getMoment(row.dt_create),\n      });\n    }\n  },\n  methods: {\n    getPrice(data) {\n      if (data.stock_type == \"kor\") {\n        return Math.floor(data.price);\n      } else if (data.stock_type == \"usa\" || data.stock_type == \"usa/etf\") {\n        return data.price;\n      } else {\n        return data.stock_type;\n      }\n    },\n    getTotal(data) {\n      if (data.stock_type == \"kor\") {\n        return Math.floor(data.total);\n      } else if (data.stock_type == \"usa\" || data.stock_type == \"usa/etf\") {\n        return Math.floor(data.total);\n      } else {\n        return data.stock_type;\n      }\n    },\n  },\n};\n</script>\n","import { render } from \"./InvestHome.vue?vue&type=template&id=1aa3a9a3\"\nimport script from \"./InvestHome.vue?vue&type=script&lang=js\"\nexport * from \"./InvestHome.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}